apply plugin: "com.android.library"

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'



apply from: '../../jitpack.gradle'

//作为module的通用配置
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        //testInstrumentationRunner "android.test.runner.AndroidJUnitRunner"
        //consumerProguardFiles 'consumer-rules.pro'
        //testInstrumentationRunner "android.test.runner.AndroidJUnitRunner"

        // 仅保留中文语种的资源
        resConfig 'zh'

        // 仅保留 xxhdpi 图片资源（目前主流分辨率 1920 * 1080）
        resConfig 'xxhdpi'

        // 仅保留两种架构的 so 库，根据 Bugly 统计得出
        ndk {
            // armeabi：万金油架构平台（占用率：0%）
            // armeabi-v7a：曾经主流的架构平台（占用率：10%）
            // arm64-v8a：目前主流架构平台（占用率：90%）
            abiFilters "armeabi-v7a", "arm64-v8a"
        }

        //multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    dexOptions {
        //javaMaxHeapSize "4g"
    }


    buildTypes {
        release {
            postprocessing {
                removeUnusedCode false
                removeUnusedResources false
                obfuscate false
                optimizeCode false
                proguardFile 'proguard-rules.pro'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            main.java.srcDirs += 'src/main/kotlin'
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
    }

    /*dataBinding{
        enabled true
    }*/
}


/*configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:26.1.0'
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
    }
}*/


dependencies {
    configurations {
        all*.exclude group: 'com.android.support', module: 'support-v13'
    }
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    //androidTestImplementation 'android.test.espresso:espresso-core:3.1.0'

    def dp = rootProject.ext.dependencies
    implementation dp["appcompat-v7"]
    implementation dp["design"]
    implementation dp["kotlin_jdk"]

    //implementation 'androidx.appcompat:appcompat:1.1.0'
    //implementation 'com.google.android.material:material:1.2.0-alpha04'
    //kapt dp["dagger-compiler"]
    //kapt dp["arouter_compiler"]
    //kapt dp["butterknife-compiler"]
}
